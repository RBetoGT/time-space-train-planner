// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"traines.eu/time-space-train-planner/providers/dbtimetables/models"
)

// GetRchgEvaNoReader is a Reader for the GetRchgEvaNo structure.
type GetRchgEvaNoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRchgEvaNoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRchgEvaNoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRchgEvaNoBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRchgEvaNoNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetRchgEvaNoOK creates a GetRchgEvaNoOK with default headers values
func NewGetRchgEvaNoOK() *GetRchgEvaNoOK {
	return &GetRchgEvaNoOK{}
}

/*GetRchgEvaNoOK handles this case with default header values.

successful operation
*/
type GetRchgEvaNoOK struct {
	Payload *models.Timetable
}

func (o *GetRchgEvaNoOK) Error() string {
	return fmt.Sprintf("[GET /rchg/{evaNo}][%d] getRchgEvaNoOK  %+v", 200, o.Payload)
}

func (o *GetRchgEvaNoOK) GetPayload() *models.Timetable {
	return o.Payload
}

func (o *GetRchgEvaNoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Timetable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRchgEvaNoBadRequest creates a GetRchgEvaNoBadRequest with default headers values
func NewGetRchgEvaNoBadRequest() *GetRchgEvaNoBadRequest {
	return &GetRchgEvaNoBadRequest{}
}

/*GetRchgEvaNoBadRequest handles this case with default header values.

incorrect syntax
*/
type GetRchgEvaNoBadRequest struct {
}

func (o *GetRchgEvaNoBadRequest) Error() string {
	return fmt.Sprintf("[GET /rchg/{evaNo}][%d] getRchgEvaNoBadRequest ", 400)
}

func (o *GetRchgEvaNoBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRchgEvaNoNotFound creates a GetRchgEvaNoNotFound with default headers values
func NewGetRchgEvaNoNotFound() *GetRchgEvaNoNotFound {
	return &GetRchgEvaNoNotFound{}
}

/*GetRchgEvaNoNotFound handles this case with default header values.

resource not found
*/
type GetRchgEvaNoNotFound struct {
}

func (o *GetRchgEvaNoNotFound) Error() string {
	return fmt.Sprintf("[GET /rchg/{evaNo}][%d] getRchgEvaNoNotFound ", 404)
}

func (o *GetRchgEvaNoNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
