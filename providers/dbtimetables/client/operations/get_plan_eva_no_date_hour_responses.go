// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"traines.eu/time-space-train-planner/providers/dbtimetables/models"
)

// GetPlanEvaNoDateHourReader is a Reader for the GetPlanEvaNoDateHour structure.
type GetPlanEvaNoDateHourReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPlanEvaNoDateHourReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPlanEvaNoDateHourOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPlanEvaNoDateHourBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPlanEvaNoDateHourNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetPlanEvaNoDateHourGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetPlanEvaNoDateHourOK creates a GetPlanEvaNoDateHourOK with default headers values
func NewGetPlanEvaNoDateHourOK() *GetPlanEvaNoDateHourOK {
	return &GetPlanEvaNoDateHourOK{}
}

/*GetPlanEvaNoDateHourOK handles this case with default header values.

successful operation
*/
type GetPlanEvaNoDateHourOK struct {
	Payload *models.Timetable
}

func (o *GetPlanEvaNoDateHourOK) Error() string {
	return fmt.Sprintf("[GET /plan/{evaNo}/{date}/{hour}][%d] getPlanEvaNoDateHourOK  %+v", 200, o.Payload)
}

func (o *GetPlanEvaNoDateHourOK) GetPayload() *models.Timetable {
	return o.Payload
}

func (o *GetPlanEvaNoDateHourOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Timetable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPlanEvaNoDateHourBadRequest creates a GetPlanEvaNoDateHourBadRequest with default headers values
func NewGetPlanEvaNoDateHourBadRequest() *GetPlanEvaNoDateHourBadRequest {
	return &GetPlanEvaNoDateHourBadRequest{}
}

/*GetPlanEvaNoDateHourBadRequest handles this case with default header values.

incorrect syntax
*/
type GetPlanEvaNoDateHourBadRequest struct {
}

func (o *GetPlanEvaNoDateHourBadRequest) Error() string {
	return fmt.Sprintf("[GET /plan/{evaNo}/{date}/{hour}][%d] getPlanEvaNoDateHourBadRequest ", 400)
}

func (o *GetPlanEvaNoDateHourBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPlanEvaNoDateHourNotFound creates a GetPlanEvaNoDateHourNotFound with default headers values
func NewGetPlanEvaNoDateHourNotFound() *GetPlanEvaNoDateHourNotFound {
	return &GetPlanEvaNoDateHourNotFound{}
}

/*GetPlanEvaNoDateHourNotFound handles this case with default header values.

resource not found
*/
type GetPlanEvaNoDateHourNotFound struct {
}

func (o *GetPlanEvaNoDateHourNotFound) Error() string {
	return fmt.Sprintf("[GET /plan/{evaNo}/{date}/{hour}][%d] getPlanEvaNoDateHourNotFound ", 404)
}

func (o *GetPlanEvaNoDateHourNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPlanEvaNoDateHourGone creates a GetPlanEvaNoDateHourGone with default headers values
func NewGetPlanEvaNoDateHourGone() *GetPlanEvaNoDateHourGone {
	return &GetPlanEvaNoDateHourGone{}
}

/*GetPlanEvaNoDateHourGone handles this case with default header values.

resource no longer available
*/
type GetPlanEvaNoDateHourGone struct {
}

func (o *GetPlanEvaNoDateHourGone) Error() string {
	return fmt.Sprintf("[GET /plan/{evaNo}/{date}/{hour}][%d] getPlanEvaNoDateHourGone ", 410)
}

func (o *GetPlanEvaNoDateHourGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
