// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// DistributorType Distributor type.
//
// * s - CITY
// * r - REGION
// * f - LONG DISTANCE
// * x - OTHER
//
//
// swagger:model distributorType
type DistributorType string

const (

	// DistributorTypeS captures enum value "s"
	DistributorTypeS DistributorType = "s"

	// DistributorTypeR captures enum value "r"
	DistributorTypeR DistributorType = "r"

	// DistributorTypeF captures enum value "f"
	DistributorTypeF DistributorType = "f"

	// DistributorTypeX captures enum value "x"
	DistributorTypeX DistributorType = "x"
)

// for schema
var distributorTypeEnum []interface{}

func init() {
	var res []DistributorType
	if err := json.Unmarshal([]byte(`["s","r","f","x"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		distributorTypeEnum = append(distributorTypeEnum, v)
	}
}

func (m DistributorType) validateDistributorTypeEnum(path, location string, value DistributorType) error {
	if err := validate.Enum(path, location, value, distributorTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this distributor type
func (m DistributorType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateDistributorTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
