// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// TripType Trip type
//
// swagger:model tripType
type TripType string

const (

	// TripTypeP captures enum value "p"
	TripTypeP TripType = "p"

	// TripTypeE captures enum value "e"
	TripTypeE TripType = "e"

	// TripTypeZ captures enum value "z"
	TripTypeZ TripType = "z"

	// TripTypeS captures enum value "s"
	TripTypeS TripType = "s"

	// TripTypeH captures enum value "h"
	TripTypeH TripType = "h"

	// TripTypeN captures enum value "n"
	TripTypeN TripType = "n"
)

// for schema
var tripTypeEnum []interface{}

func init() {
	var res []TripType
	if err := json.Unmarshal([]byte(`["p","e","z","s","h","n"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		tripTypeEnum = append(tripTypeEnum, v)
	}
}

func (m TripType) validateTripTypeEnum(path, location string, value TripType) error {
	if err := validate.Enum(path, location, value, tripTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this trip type
func (m TripType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateTripTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
